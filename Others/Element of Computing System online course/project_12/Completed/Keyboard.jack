// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

static boolean stillpressed;
    /** Initializes the keyboard. */
    function void init() {
	let stillpressed = false;
	return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
	var int key;
    let key = Memory.peek(24576);
	if (key>0){
		let stillpressed = true;
	}
	else{
		let stillpressed =false;
	}
    return key;
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
	var char chr;
	while (~(stillpressed)){
		let chr = Keyboard.keyPressed();
	}
	while (stillpressed){
		do Keyboard.keyPressed();	
	}
	
	if ((chr>32) & (chr<127)){
		do Output.printChar(chr);
		}
	return chr;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
	var char chs;
	var String line;
	
	let line=String.new(256);
	do Output.printString(message);
	let chs = Keyboard.readChar();
	while (~(chs=128)){
		
			
			if (chs=129){
				do Output.backSpace();
				do line.eraseLastChar();
			}
			else{
				do line.appendChar(chs);
			}
			let chs = Keyboard.readChar();
		
	}
	if (chs=128){
		do Output.println();
	}
	return line;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
	
	var String val;
	let val = Keyboard.readLine(message);
    
	return val.intValue();
}
}
