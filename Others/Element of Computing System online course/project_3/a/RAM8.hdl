// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=o1,b=o2,c=o3,d=o4, e=o5, f=o6, g=o7, h=o8);
Register(in=in, load=o1, out=op1);
Register(in=in, load=o2, out=op2);
Register(in=in, load=o3, out=op3);
Register(in=in, load=o4, out=op4);
Register(in=in, load=o5, out=op5);
Register(in=in, load=o6, out=op6);
Register(in=in, load=o7, out=op7);
Register(in=in, load=o8, out=op8);
Mux8Way16(a=op1,b=op2,c=op3,d=op4,e=op5,f=op6,g=op7,h=op8, sel=address,out=out);
}